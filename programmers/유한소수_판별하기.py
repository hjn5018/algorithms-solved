def solution(a, b):
    while a % 2 == 0 and b % 2 == 0:
        a /= 2
        b /= 2
    
    while a % 5 == 0 and b % 5 == 0:
        a /= 5
        b /= 5
    
    # 분모에 2나 5가 없다면
    if b % 2 and b % 5:
        if b == 1: # 분모가 1일 때 유한 소수이다.
            return 1
        elif a % b == 0: # 분모가 1이 아니라면 분자가 분모의 배수여야 유한 소수이다.
            return 1
    # 분모에 2나 5가 있다면 (7/2*11) (7/2*49) (49/2*7)
    else:
        # 분모의 약수에서 2와 5를 지웠을 때, 분자가 분모의 배수여야 유한 소수이다.
        while b % 2 == 0:
            b /= 2
        while b % 5 == 0:
            b /= 5
        if a % b == 0:
            return 1
    return 2
    
#     2와 5를 공약수로 지우다가
#         1. 1/x 형태 
#             1-1. (1/7, 1/2*7) 무한
#             1-2. (1/5, 1/2) 유한
#         2. x/y 형태 
#             2-1 (2/7, 2*5/7, 2*5*3/7, 7/2, 7/2*5, 7/2*5*3) 무한
#             2-2 (2/5, 5/2, 7/2) 유한
            
#     간단히 생각했을 때,
#     1. 분모와 분자의 최대공약수를 분모와 분자에 각각 나눈다.
#     2. 분모에 2, 5만 남아있으면 return 1 else return 2

#     최대공약수는 체에 걸러서 확인하는 방법 밖엔 없나?
    
    
#     내가 그동안 판별하던 방법:
#     분모를 10으로 만들 수 있는가.
#     깔끔하지 않다면 공약수를 제할 수 있는가
    
    
    # https://school.programmers.co.kr/learn/courses/30/lessons/120878
